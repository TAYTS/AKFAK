
syntax = "proto3";

package proto.metadatapb;

option go_package = "AKFAK/proto/metadatapb";

// https://kafka.apache.org/protocol#The_Messages_Metadata

message MetadataRequest {
  string topicName = 1;
  /*
  topicName tells us the topic to produce metadata for.
  */
}

message MetadataResponse {
  repeated Broker brokers = 1;
  Topic topic = 2;
}

message Broker {
  int32 nodeID = 1;
  string host = 2;
  int32 port = 3;
}

message Topic {
  int32 errorCode = 1; // int16 in original implementation
  string name = 2;
  repeated Partition partitions = 3;
}

message Partition {
  int32 errorCode = 1; // int16 in original implementation
  int32 partitionIndex = 2;
  int32 leaderID = 3;
  /*
  leader represents the node id for the kafka broker current acting as the
  leader for this partition. If no leader exists because system is in the middle
  of a leader election, this id will be -1
  */
  repeated int32 replicaNodes = 4;
  // set of alive nodes that current act as slaves for the leader for this
  // partition
  repeated int32 isrNodes = 5;
  // set subset of replicas that in sync with leader of partition
}

service MetadataService {
    rpc waitOnMetadata(MetadataRequest) returns (MetadataResponse) {}
}
