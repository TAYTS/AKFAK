syntax = "proto3";

package proto.recordpb;

option go_package = "AKFAK/proto/recordpb";

message Header {
  int32 headerKeyLength = 1;
  string headerKey = 2;
  int32 headerValueLength = 3;
  bytes value = 4;
}

message Record {
  int32 length = 1;     // varint in original implementation
  int32 attributes = 2; // int8 in original implementation
  /* attributes
      bit 0~7: unused
  */

  int32 timestampDelta = 3;
  int32 offsetDelta = 4; // varint in original implementation
  int32 keyLength = 5;   // varint in original implementation
  bytes key = 6;
  int32 valueLen = 7; // varint in original implementation
  bytes value = 8;
  repeated Header Headers = 9;
}

message RecordBatch {
  int64 baseOffset = 1; // used in log compression
  bytes batchLength = 2; // int32; equivalent to []byte with size 4
  int32 partitionLeaderEpoch = 3;
  int32 magic = 4; // int8 in original implementation (for kafka version check, current magic value is 2)
  int32 crc = 5;  // to make sure msg not corrupted
  int32 attributes = 6; // int16 in original implementation
  /* attributes
      bit 0~2:
          0: no compression
          1: gzip
          2: snappy
          3: lz4
          4: zstd
      bit 3: timestampType
      bit 4: isTransactional (0 means not transactional)
      bit 5: isControlBatch (0 means not a control batch)
      bit 6~15: unused
  */
  int32 lastOffsetDelta = 7;   // last offset delta of record
  int64 firstTimestamp = 8;    // time when record batch is first instantiated
  int64 maxTimestamp = 9;      // time when last record is added
  int64 producerId = 10;       // uuid of producer
  int32 producerEpoch = 11;    // int16 in original implementation
  int32 baseSequence = 12;     //
  repeated Record records = 13; //
}
