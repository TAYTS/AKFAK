syntax = "proto3";

package proto;

option go_package = "record";

message Header {
    int32 headerKeyLength = 1;
    string headerKey = 2;
    int32 headerValueLength = 3;
    bytes Value = 4;
}

message Record {
    int32 length = 1; //varint in original implementation
    int32 attributes = 2; //int8 in original implementation
    int32 timestampDelta = 3;
    int32 offsetDelta = 4; //varint in original implementation
    int32 keyLength = 5; //varint in original implementation
    bytes key = 6;
    int32 valueLne = 7; //varint in original implementation
    bytes value = 8;
    repeated Header Headers = 9; 
}

message RecordBatch {
    int64 baseOffset = 1;
    int32 batchLength = 2;
    int32 partitionLeaderEpoch = 3;
    int32 magic = 4; //int8 in original implementation
    int32 crc = 5;
    int32 attributes = 6; //int16 in original implementation
    int32 lastOffsetDelta = 7;
    int64 firstTimestamp = 8;
    int64 maxTimestamp = 9;
    int64 producerId = 10;
    int32 producerEpoch = 11; //int16 in original implementation
    int32 baseSequence = 12;
    repeated Record records = 13;
}

message BatchResponse { string result = 1; }
message RecordResponse { string result = 1; }

service SendMessageService {
    rpc SendBatch(stream RecordBatch) returns (stream BatchResponse) {};
    rpc SendMessage(stream Record) returns (stream RecordResponse) {}
}

